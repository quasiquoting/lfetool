(defmodule {{PROJECT}}-sup
  (doc "TODO: write docstring")
  (behaviour supervisor)
  ;; API
  (export (start_link 0))
  ;; Supervisor callbacks
  (export (init 1)))

(defun SERVER () (MODULE))

(defun start_link ()
  "Create a supervisor process as part of a supervision tree."
  (supervisor:start_link `#(local ,(SERVER)) (MODULE) []))

(defun init (args)
  "Return the restart strategy and child specifications."
  (let* ((server '#m(id       {{PROJECT}}-server
                     start    {{PROJECT}}-server start_link [])
                     restart  permanent
                     shutdown 2000
                     type     worker
                     modules  [{{PROJECT}}-server]))
         (children `[,server])
         (restart-strategy '#m(strategy  one_for_one
                               intensity 3
                               period    1)))
    `#(ok #(,restart-strategy ,children))))
